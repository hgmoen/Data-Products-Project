library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
load.packages(manipulate)
install.packages(manipulate)
install.packages("manipulate")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
dTable(airquality, sPaginationType = "full_numbers")
require(devtools)
install_github('rCharts', 'ramnathv')
require(devtools)
install.packages("devtools")
shiny::runApp('R/Coursera')
data("airmiles")
data(airmiles)
y<-data(airmiles)
load.data(airmiles)
head(airmiles)
data("ChickWeight")
data(ChickWeight)
?load(ChickWeight)
?load(ChickWeight)
require(graphics)
coplot(weight ~ Time | Chick, data = ChickWeight,
type = "b", show.given = FALSE)
View(ChickWeight)
unique(ChickWeight$Chick)
unique(ChickWeight$Chick, ChickWeight$Diet)
unique(ChickWeight$Chick, ChickWeight$Diet)
data(LakeHuron)
?data
head(LakeHuron)
colnames(LakeHuron)
data("UScitiesD")
head(UScitiesD)
summary(UScitiesD)
data("rivers")
data("Orange")
head(Orange)
unique(Orange$Tree)
unique(Orange$age)
plot(Tree ~ age, data=Orange)
View(Orange)
ggplot(Tree ~ age, data=Orange)
# convert factor to numeric for convenience
Orange$Tree <- as.numeric(Orange$Tree)
ntrees <- max(Orange$Tree)
# get the range for the x and y axis
xrange <- range(Orange$age)
yrange <- range(Orange$circumference)
# set up the plot
plot(xrange, yrange, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
# add lines
for (i in 1:ntrees) {
tree <- subset(Orange, Tree==i)
lines(tree$age, tree$circumference, type="b", lwd=1.5,
lty=linetype[i], col=colors[i], pch=plotchar[i])
}
# add a title and subtitle
title("Tree Growth", "example of line plot")
# add a legend
legend(xrange[1], yrange[2], 1:ntrees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
max(Orange$Tree)
plot(xrange, yrange, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
?table
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
x<-char("1", "2", "3")
x<-character("1", "2", "3")
?"character"
x<-1:3
y<-as.character(x)
z<-as.numeric(y)
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
trees
trees<-3:4
len(trees)
length(trees)
?for
trees[1]
trees[1]
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
?lines
library(graphics)
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
?legend
shiny::runApp('R/Coursera')
?lines
shiny::runApp('R/Coursera')
?par
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
legend
?legend
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera')
shiny::runApp('R/Coursera/Shiny')
shiny::runApp('R/Coursera/Shiny')
shiny::runApp('R/Coursera/Shiny')
shiny::runApp('R/Coursera/Shiny')
shiny::runApp('R/Coursera/Shiny')
shiny::runApp('R/Coursera/Shiny')
shiny::runApp('R/Coursera/Shiny')
shiny::runApp('R/Coursera/Shiny')
shiny::runApp('R/Coursera/Shiny')
library(slidify)
library(knitr)
browseURL("index.Rmd")
slidify("index.Rmd")
setwd("~/R/Coursera/first_deck")
slidify("index.Rmd")
browseURL("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
shiny::runApp('~/R/Coursera/Shiny')
tail(Orange)
shiny::runApp('~/R/Coursera/Shiny')
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify('index.Rmd')
setwd("~/R/Coursera/first_deck")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL("index.html")
slidify('index.Rmd')
browseURL("index.html")
slidify('index.Rmd')
browseURL("index.html")
slidify('index.Rmd')
browseURL("index.html")
?Orange
slidify('index.Rmd')
browseURL("index.html")
library(graphics)
data("Orange")
Orange$Tree <- as.numeric(Orange$Tree)
xrange <- range(Orange$age)
yrange <- range(Orange$circumference)
trees <- 1:5
ntrees <- length(trees)
plot(xrange, yrange, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
lines(Orange$age, Orange$circumference, type="b", lwd=1.5,
col=colors[trees], pch=plotchar[trees])
# add a legend
if (ntrees >= 1) {
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
}
}
# add a title and subtitle
title("Tree Growth")
plot(xrange, yrange, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
lines(Orange$age, Orange$circumference, type="b", lwd=1.5,
col=colors[trees], pch=plotchar[trees])
# add a legend
if (ntrees >= 1) {
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
}
}
# add a title and subtitle
title("Tree Growth")
trees <- 1:5
ntrees <- length(trees)
plot(xrange, yrange, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
lines(Orange$age, Orange$circumference, type="b", lwd=1.5,
col=colors[trees], pch=plotchar[trees])
# add a legend
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
}
# add a title and subtitle
title("Tree Growth")
plot(xrange, yrange, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
lines(Orange$age, Orange$circumference, type="b", lwd=1.5,
col=colors[trees], pch=plotchar[trees])
# add a legend
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
}
# add a title and subtitle
title("Tree Growth")
plot(xrange, yrange, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
lines(Orange$age, Orange$circumference, type="b", lwd=1.5,
col=colors[trees], pch=plotchar[trees])
# add a legend
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
# add a title and subtitle
title("Tree Growth")
library(ggplot)
library(ggplot2)
load.packages("ggplot2")
load.package("ggplot2")
install.packages("ggplot2")
library(ggplot2)
data("Orange")
Orange$Tree <- as.numeric(Orange$Tree)
qplot(age, circumference, data = Orange, geom = "line",
colour = Tree,
main = "How does orange tree circumference vary with age?")
library(ggplot2)
data("Orange")
qplot(age, circumference, data = Orange, geom = c("point", "line"), colour = Tree)
?qplot
slidify('index.Rmd')
browseURL("index.html")
shiny::runApp('~/R/Coursera/Shiny')
slidify('index.Rmd')
browseURL("index.html")
slidify('index.Rmd')
browseURL("index.html")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
qplot(age, circumference, data = Orange, geom = c("point", "line"), colour = Tree) +
theme(plot.margin = unit(c(2,1,2,1), "cm"))
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
shiny::runApp('~/R/Coursera/Shiny')
Orange$Tree <- as.numeric(Orange$Tree)
xrange <- range(Orange$age)
yrange <- range(Orange$circumference)
trees <- 1:5
ntrees <- length(trees)
plot(xrange, yrange, type="n", xlab="Age (days)",ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
treeset <- Orange
lines(treeset$age, treeset$circumference, type="b", lwd=1.5,
col=colors, pch=plotchar)
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
title("Tree Growth")
plot(xrange, yrange, type="n", xlab="Age (days)",ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
treeset <- Orange
lines(treeset$age, treeset$circumference, type="b", lwd=1.5,
col=colors, pch=plotchar)
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors[5],
pch=plotchar[5], lty=linetype[5], title="Tree")
title("Tree Growth")
Orange$Tree <- as.numeric(Orange$Tree)
ntrees <- max(Orange$Tree)
xrange <- range(Orange$age)
yrange <- range(Orange$circumference)
plot(xrange, yrange, type="n", xlab="Age (days)",ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
treeset <- Orange
lines(treeset$age, treeset$circumference, type="b", lwd=1.5,
col=colors, pch=plotchar)
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
title("Tree Growth")
Orange$Tree <- as.numeric(Orange$Tree)
ntrees <- max(Orange$Tree)
xrange <- range(Orange$age)
yrange <- range(Orange$circumference)
plot(xrange, yrange, type="n", xlab="Age (days)",ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
lines(Orange$age, Orange$circumference, type="b", lwd=1.5,
col=colors, pch=plotchar)
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
title("Tree Growth")
Orange$Tree <- as.numeric(Orange$Tree)
ntrees <- max(Orange$Tree)
xrange <- range(Orange$age)
yrange <- range(Orange$circumference)
plot(xrange, yrange, type="n", xlab="Age (days)",ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
lines(Orange$age, Orange$circumference, type="b", lwd=1.5,
col=colors, pch=plotchar)
legend(xrange, yrange, trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
title("Tree Growth")
Orange$Tree <- as.numeric(Orange$Tree)
ntrees <- max(Orange$Tree)
xrange <- range(Orange$age)
yrange <- range(Orange$circumference)
plot(xrange, yrange, type="n", xlab="Age (days)",ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
for (i in 1:ntrees) {
tree <- subset(Orange, Tree==i)
lines(tree$age, tree$circumference, type="b", lwd=1.5,
lty=linetype[i], col=colors[i], pch=plotchar[i])
}
legend(xrange[1], yrange[2], trees, cex=0.8, col=colors,
pch=plotchar, lty=linetype, title="Tree")
title("Tree Growth")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
publish_github(Shiny-App-and-Reproducible-Pitch, hgmoen)
publish_github(repo="Shiny-App-and-Reproducible-Pitch", user="hgmoen")
unique(Orange$age)
slidify('index.Rmd')
slidify('index.Rmd')
?axis
c(1:5)
unique(Orange$age)
slidify('index.Rmd')
?plot
?axis
shiny::runApp('~/R/Coursera/Shiny')
shiny::runApp('~/R/Coursera/Shiny')
age<-unique(Orange$age)
max(age)
shiny::runApp('~/R/Coursera/Shiny')
plot(1:10, xaxt = "n")
axis(1, xaxp = c(2, 9, 7))
shiny::runApp('~/R/Coursera/Shiny')
shiny::runApp('~/R/Coursera/Shiny')
yahoo2$date[ at ]
yahoo$date[ at ]
Orange$age[ at ]
shiny::runApp('~/R/Coursera/Shiny')
shiny::runApp('~/R/Coursera/Shiny')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
git@github.com:hgmoen/Shiny-App-and-Reproducible-Pitch.git
publish(title = 'Tree Growth', 'index.html', host = 'rpubs')
publish_github(Shiny-App-and-Reproducible-Pitch, hgmoen)
publish_github(Shiny-App-and-Reproducible-Pitch, "hgmoen")
publish_github(Shiny-App-and-Reproducible-Pitch, "hgmoen")
publish_github("Shiny-App-and-Reproducible-Pitch", "hgmoen")
publish_github(hgmoen, Shiny-App-and-Reproducible-Pitch)
publish_github("hgmoen", "Shiny-App-and-Reproducible-Pitch")
publish(user = "HGMOEN", repo = "SHINY-APP-AND-REORIDUCIBLE-PITCH")
publish(user = "HGMOEN", repo = "https://github.com/hgmoen/Shiny-App-and-Reproducible-Pitch.git")
publish(user = "hgmoen", repo = "Shiny-App-and-Reproducible-Pitch")
publish_github(user = "hgmoen", repo = "Shiny-App-and-Reproducible-Pitch")
publish_github(user = "hgmoen", repo = "Shiny-App-and-Reproducible-Pitch")
publish(title = 'Tree Growth', 'index.html', host = 'rpubs')
